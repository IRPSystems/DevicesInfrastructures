<UserControl x:Class="DeviceHandler.Views.ParamGroupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"  
             xmlns:converters="clr-namespace:Converters;assembly=Converters"
             xmlns:controls_view="clr-namespace:Controls.Views;assembly=Controls"
             xmlns:local_converters="clr-namespace:DeviceHandler.Converters"
             xmlns:local="clr-namespace:DeviceHandler.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/DeviceHandler;component/Resources/ToolsStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Controls;component/Resources/ToggleButtonWithIcon.xaml" />
            </ResourceDictionary.MergedDictionaries>



            <local_converters:BracketedUnitsConverter x:Key="BracketedUnitsConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <local_converters:ShowHexPerfixConverter x:Key="ShowHexPerfixConverter" />
            <local_converters:ShowRegularTextBoxConverter x:Key="ShowRegularTextBoxConverter" />
            <local_converters:ShowComboBoxConverter x:Key="ShowComboBoxConverter" />
            <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
            <local_converters:AutomationIdBuilderConverte x:Key="AutomationIdBuilderConverte" />

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>

        <DataGrid ItemsSource="{Binding ParamGroup.ParamList}"
                  HeadersVisibility="None"
                  GridLinesVisibility="None"
                  BorderThickness="0"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  AutoGenerateColumns="False"
                  Margin="0,10,0,0"
                  Style="{x:Null}"
                  Background="Transparent"
                  Name="dgParams">

            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell" >
                    <Setter Property="BorderThickness" Value="0" />

                    <Style.Triggers>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>

                    </Style.Triggers>

                </Style>
            </DataGrid.CellStyle>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Margin" Value="0,2" />
                    <EventSetter Event="KeyDown" Handler="DataGridKeyDown" />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>

                <DataGridTemplateColumn Header="Name" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"
                                       VerticalAlignment="Center" Margin="0,0,5,0" FontSize="14"
                                       Name="tbName"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Units" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Units, Converter={StaticResource BracketedUnitsConverter}}" 
                                       VerticalAlignment="Center"  Margin="0,0,5,0"
                                       Name="tbUnits"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Value" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <Grid Margin="0,0,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="120"/>
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Background="Transparent"
                                        ToolTipService.InitialShowDelay="1"
                                       Name="brdrHelp">

                                    <iconPacks:Material Kind="HelpCircleOutline" />

                                    <Border.ToolTip>
                                        <ToolTip Padding="0">
                                            <local:DescriptionBallon Parameter="{Binding}"/>
                                        </ToolTip>
                                    </Border.ToolTip>
                                </Border>

                                <Grid Grid.Column="2" 
                                      ToolTip="{Binding ErrorDescription}" 
                                      ToolTipService.InitialShowDelay="1"
                                      Name="grdValue">

                                    <controls_view:HexTextBoxView Background="{Binding Background}"
                                                                  Foreground="{Binding Foreground}"
                                                                  Visibility="{Binding Format, Converter={StaticResource ShowHexPerfixConverter}}"
                                                                  Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                  TextBoxKeyUpCommand="{Binding DataContext.TextBox_KeyUpCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                  AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                                              Converter={StaticResource AutomationIdBuilderConverte}}"
                                                                  Name="htbValue">

                                        <i:Interaction.Triggers>

                                            <i:EventTrigger EventName="EnterEvent">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.HexTextBox_EnterEventCommand, 
                                                                                     Mode=OneWay, 
                                                                                     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                       CommandParameter="{Binding}"
                                                                   PassEventArgsToCommand="False"/>
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="HexKeyDownEvent">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.HexTextBox_HexKeyDownEventCommand, 
                                                                                     Mode=OneWay, 
                                                                                     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                   PassEventArgsToCommand="True"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>


                                    </controls_view:HexTextBoxView>

                                    <TextBox Name="tbValue" 
                                             Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                                             Background="{Binding Background}"
                                             Foreground="{Binding Foreground}"
                                             Visibility="{Binding Converter={StaticResource ShowRegularTextBoxConverter}}"
                                             IsReadOnly="{Binding DataContext.IsShowButtons, 
                                                                 Converter={StaticResource InverseBoolConverter},
                                                                 RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                             AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                         Converter={StaticResource AutomationIdBuilderConverte}}">

                                        <i:Interaction.Triggers>

                                            <i:EventTrigger EventName="KeyUp">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.TextBox_KeyUpCommand, 
                                                                                     Mode=OneWay, 
                                                                                     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                   PassEventArgsToCommand="True"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>

                                    </TextBox>

                                    <Grid Visibility="{Binding Converter={StaticResource ShowComboBoxConverter}}">
                                        <ComboBox Name="cbValue"
                                                  ItemsSource="{Binding DropDown}"
                                                  SelectedItem="{Binding SelectedDropDown, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  Background="{Binding Background}"
                                                  Foreground="{Binding Foreground}"
                                                  AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                              Converter={StaticResource AutomationIdBuilderConverte}}">

                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Name}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>

                                            <i:Interaction.Triggers>

                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.ComboBox_DropDownClosedCommand, 
                                                                                     Mode=OneWay, 
                                                                                     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                   CommandParameter="{Binding ElementName=cbValue}"
                                                                   PassEventArgsToCommand="False"/>
                                                </i:EventTrigger>

                                                <i:EventTrigger EventName="KeyUp">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TextBox_KeyUpCommand, 
                                                                                     Mode=OneWay, 
                                                                                     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                   PassEventArgsToCommand="True"/>
                                                </i:EventTrigger>

                                            </i:Interaction.Triggers>

                                            <ComboBox.Resources>
                                                <Style TargetType="ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                                                    <Style.Triggers>

                                                        <DataTrigger Binding="{Binding DataContext.IsShowButtons, 
                                                                                   RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                 Value="True">

                                                            <Setter Property="Visibility" Value="Visible"/>

                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding DataContext.IsShowButtons, 
                                                                                   RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                 Value="False">

                                                            <Setter Property="Visibility" Value="Collapsed"/>

                                                        </DataTrigger>

                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Resources>

                                        </ComboBox>

                                        <TextBox Name="tbCombo" 
                                                 IsReadOnly="True"
                                                 Text="{Binding SelectedItem.Name, ElementName=cbValue}"
                                                 AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                             Converter={StaticResource AutomationIdBuilderConverte}}">

                                            <TextBox.Resources>
                                                <Style TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                                                    <Style.Triggers>

                                                        <DataTrigger Binding="{Binding DataContext.IsShowButtons, 
                                                                                   RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                 Value="True">

                                                            <Setter Property="Visibility" Value="Collapsed"/>

                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding DataContext.IsShowButtons, 
                                                                                   RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                 Value="False">

                                                            <Setter Property="Visibility" Value="Visible"/>

                                                        </DataTrigger>

                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Resources>

                                        </TextBox>




                                    </Grid>

                                </Grid>

                                <Grid Grid.Column="2" 
                                      ToolTip="{Binding ErrorDescription}" 
                                      ToolTipService.InitialShowDelay="1"
                                      Name="grdEditValue">

                                    <controls_view:HexTextBoxView Background="{Binding Background}"
                                                                  Foreground="{Binding Foreground}"
                                                                  Visibility="{Binding Format, Converter={StaticResource ShowHexPerfixConverter}}"
                                                                  Text="{Binding EditValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                  TextBoxKeyUpCommand="{Binding DataContext.TextBox_KeyUpCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                  AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                                              Converter={StaticResource AutomationIdBuilderConverte}}"
                                                                  Name="htbValue1">

                                        <i:Interaction.Triggers>

                                            <i:EventTrigger EventName="EnterEvent">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.HexTextBox_EnterEventCommand, 
                                                                                        Mode=OneWay, 
                                                                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                        CommandParameter="{Binding}"
                                                                    PassEventArgsToCommand="False"/>     
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="HexKeyDownEvent">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.HexTextBox_HexKeyDownEventCommand, 
                                                                                         Mode=OneWay, 
                                                                                         RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                       PassEventArgsToCommand="True"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>


                                    </controls_view:HexTextBoxView>

                                    <TextBox Name="tbValue1" 
                                             Text="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}"
                                             Background="{Binding Background}"
                                             Foreground="{Binding Foreground}"
                                             Visibility="{Binding Converter={StaticResource ShowRegularTextBoxConverter}}"
                                             IsReadOnly="{Binding DataContext.IsShowButtons, 
                                                                 Converter={StaticResource InverseBoolConverter},
                                                                 RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                             AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                         Converter={StaticResource AutomationIdBuilderConverte}}">

                                        <i:Interaction.Triggers>

                                            <i:EventTrigger EventName="KeyUp">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.TextBox_KeyUpCommand, 
                                                                                         Mode=OneWay, 
                                                                                         RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                       PassEventArgsToCommand="True"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>

                                    </TextBox>

                                    <Grid Visibility="{Binding Converter={StaticResource ShowComboBoxConverter}}">
                                        <ComboBox Name="cbValue1"
                                                  ItemsSource="{Binding DropDown}"
                                                  SelectedItem="{Binding EditSelectedDropDown, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  Background="{Binding Background}"
                                                  Foreground="{Binding Foreground}"
                                                  AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                              Converter={StaticResource AutomationIdBuilderConverte}}">

                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Name}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>

                                            <i:Interaction.Triggers>

                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.ComboBox_DropDownClosedCommand, 
                                                                                             Mode=OneWay, 
                                                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                           CommandParameter="{Binding ElementName=cbValue}"
                                                                           PassEventArgsToCommand="False"/>
                                                </i:EventTrigger>

                                                <i:EventTrigger EventName="KeyUp">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TextBox_KeyUpCommand, 
                                                                                             Mode=OneWay, 
                                                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                                                           PassEventArgsToCommand="True"/>
                                                </i:EventTrigger>

                                            </i:Interaction.Triggers>

                                            <ComboBox.Resources>
                                                <Style TargetType="ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                                                    <Style.Triggers>

                                                        <DataTrigger Binding="{Binding DataContext.IsShowButtons, 
                                                                                       RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                     Value="True">

                                                            <Setter Property="Visibility" Value="Visible"/>

                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding DataContext.IsShowButtons, 
                                                                                       RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                     Value="False">     

                                                            <Setter Property="Visibility" Value="Collapsed"/>

                                                        </DataTrigger>

                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Resources>

                                        </ComboBox>

                                        <TextBox Name="tbCombo1" 
                                                 IsReadOnly="True"
                                                 Text="{Binding SelectedItem.Name, ElementName=cbValue}"
                                                 AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                             Converter={StaticResource AutomationIdBuilderConverte}}">

                                            <TextBox.Resources>
                                                <Style TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                                                    <Style.Triggers>

                                                        <DataTrigger Binding="{Binding DataContext.IsShowButtons, 
                                                                                       RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                     Value="True">          

                                                            <Setter Property="Visibility" Value="Collapsed"/>

                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding DataContext.IsShowButtons, 
                                                                                       RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                     Value="False">     

                                                            <Setter Property="Visibility" Value="Visible"/>

                                                        </DataTrigger>

                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Resources>

                                        </TextBox>




                                    </Grid>

                                </Grid>

                            </Grid>

                            <DataTemplate.Triggers>

                                <DataTrigger Binding="{Binding IsEditing}" Value="False">
                                    <Setter TargetName="grdValue" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="grdEditValue" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                    <Setter TargetName="grdValue" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="grdEditValue" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Buttons">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <Grid Visibility="{Binding DataContext.IsShowButtons, 
                                                       RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid},
                                                       Converter={StaticResource BooleanToVisibilityConverter}}"
                                  IsEnabled="{Binding IsEnabled}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="2" />
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="2" />
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="2" />
                                    <ColumnDefinition Width="40" />
                                </Grid.ColumnDefinitions>

                                <ToggleButton Grid.Column="0"
                                              Style="{StaticResource ToggleButtonWithIconStyle}"
                                              ToolTip="Edit. Click if the parameter is monitoring"
                                              Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                              CommandParameter="{Binding}"
                                              Visibility="{Binding GetSetVisibility}"
                                              IsChecked="{Binding IsEditing}">
                                    <iconPacks:PackIconMaterial Kind="LeadPencil" Width="15" Height="15"/>
                                </ToggleButton>


                                <Button Content="Get" 
                                        Grid.Column="2"
                                        Command="{Binding DataContext.GetCommand, 
                                                          RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                        CommandParameter="{Binding}"
                                        AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                    Converter={StaticResource AutomationIdBuilderConverte}}"
                                        Name="btnGet"/>
                                <Button Content="Set" 
                                        Grid.Column="4"
                                        Command="{Binding DataContext.SetCommand, 
                                                          RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                        CommandParameter="{Binding}"
                                        AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                    Converter={StaticResource AutomationIdBuilderConverte}}"
                                        Name="btnSet"/>
                                <Button Content="Save" 
                                        Name="save"
                                        Grid.Column="6"
                                        Command="{Binding DataContext.SaveCommand, 
                                                          RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" 
                                        CommandParameter="{Binding}"
                                        AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                    Converter={StaticResource AutomationIdBuilderConverte}}"/>

                            </Grid>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Save}" Value="False">
                                    <Setter TargetName="save" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>

        </DataGrid>



    </Grid>
</UserControl>
